[{"/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/App.js":"1","/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/index.js":"2","/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/component/Book/Booklist.jsx":"3","/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/component/Book/AddBook.js":"4"},{"size":547,"mtime":1608650504700,"results":"5","hashOfConfig":"6"},{"size":311,"mtime":1608632232564,"results":"7","hashOfConfig":"6"},{"size":1019,"mtime":1608639654822,"results":"8","hashOfConfig":"6"},{"size":2658,"mtime":1608669364106,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qrwzzp",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/App.js",[],"/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/index.js",[],"/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/component/Book/Booklist.jsx",["19"],"import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"../../index.css\";\n\nconst getBooksQuery = gql`\n  query {\n    books {\n      name\n      id\n      genre\n      author {\n        name\n      }\n    }\n  }\n`;\n\nfunction Booklist() {\n  const { loading, error, data } = useQuery(getBooksQuery);\n\n  if (loading)\n    return (\n      <div className=\"d-flex justify-content-center align-items-center\">\n        <div\n          className=\"spinner-border \"\n          style={{ width: \"3rem\", height: \"3rem\" }}\n          role=\"status\"\n        >\n          <span className=\"sr-only spinner-style\">Loading...</span>\n        </div>\n      </div>\n    );\n\n  if (error)\n    return (\n      <div class=\"alert alert-success\" role=\"alert\">\n        Error :(\n      </div>\n    );\n\n  return data.books.map((book) => (\n    <div key={book.id}>\n      <p>\n        {book.author.name} is the writer of {book.name} that belongs to{\" \"}\n        {book.genre} genre\n      </p>\n    </div>\n  ));\n}\n\nexport default Booklist;\n","/home/baron/Documents/projects/personalprojects/learn_graphql/client/src/component/Book/AddBook.js",["20"],{"ruleId":"21","severity":1,"message":"22","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":25},{"ruleId":"21","severity":1,"message":"25","line":16,"column":21,"nodeType":"23","messageId":"24","endLine":16,"endColumn":33},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used."]